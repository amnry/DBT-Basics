{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-04-07T19:12:45.567564Z", "invocation_id": "76a09816-9065-48be-ab70-b594e17b46df", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.280404Z", "completed_at": "2025-04-07T19:12:45.281525Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.281776Z", "completed_at": "2025-04-07T19:12:45.281783Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0019073486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbtlearn.seed_full_moon_dates", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.282866Z", "completed_at": "2025-04-07T19:12:45.286528Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.286743Z", "completed_at": "2025-04-07T19:12:45.286749Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004379987716674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.dim_hosts_cleansed", "compiled": true, "compiled_code": "with  __dbt__cte__src_hosts as (\nWITH raw_hosts AS (\n    SELECT * FROM AIRBNB.raw.raw_hosts\n)\n\nSELECT\n    id as host_id,\n    name as host_name,\n    is_superhost,\n    created_at,\n    updated_at\nFROM raw_hosts\n), src_hosts as (\n    select * from __dbt__cte__src_hosts\n)\n\nselect\n    host_id,\n    case \n        when host_name is null then 'Anonymous'  -- Replace null host_name with 'Anonymous'\n        else host_name  -- Retain the original host_name if not null\n    end as host_name,\n    created_at,\n    updated_at,\n    is_superhost\nfrom src_hosts", "relation_name": "AIRBNB.DEV.dim_hosts_cleansed", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.287881Z", "completed_at": "2025-04-07T19:12:45.292445Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.292650Z", "completed_at": "2025-04-07T19:12:45.292654Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005347013473510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.dim_listings_cleansed", "compiled": true, "compiled_code": "with  __dbt__cte__src_listings as (\nwith raw_listings as (\n    select * from AIRBNB.raw.raw_listings\n)\nselect\n    id as listing_id,\n    name as listing_name,\n    listing_url, room_type, minimum_nights, host_id,\n    price as price_str,\n    created_at, updated_at\nfrom \n    raw_listings\n), src_listings as (\n    select * from __dbt__cte__src_listings\n)\n\nselect\n    listing_id, \n    listing_name,\n    room_type,\n    -- Adjust minimum_nights to ensure no listing has a value of 0\n    case \n        when minimum_nights = 0 then 1  -- Set minimum_nights to 1 if it is currently 0\n        else minimum_nights  -- Otherwise, keep the original minimum_nights value\n    end as minimum_nights,\n    host_id,\n    -- Remove the dollar sign from the price string\n    replace(\n        price_str,\n        '$'\n    )::number(  -- Convert the resulting string to a number\n        10,\n        2\n    ) as price,\n    created_at,\n    updated_at\nfrom src_listings", "relation_name": "AIRBNB.DEV.dim_listings_cleansed", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.293614Z", "completed_at": "2025-04-07T19:12:45.300778Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.300972Z", "completed_at": "2025-04-07T19:12:45.300976Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007812023162841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.fct_reviews", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__src_reviews as (\nWITH raw_reviews AS (\n    SELECT * FROM AIRBNB.raw.raw_reviews\n)\n\nSELECT\n    listing_id,\n    date as review_date,\n    reviewer_name,\n    comments as review_text,\n    sentiment as review_sentiment\nFROM raw_reviews\n), src_reviews as (\n    select * from __dbt__cte__src_reviews\n)\n\nselect * from src_reviews\nwhere review_text is not null\n\n    and review_date > (select max(review_date) from AIRBNB.DEV.fct_reviews)\n", "relation_name": "AIRBNB.DEV.fct_reviews", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.301866Z", "completed_at": "2025-04-07T19:12:45.303812Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.303995Z", "completed_at": "2025-04-07T19:12:45.303998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002547025680541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.dim_listings_w_hosts", "compiled": true, "compiled_code": "WITH\n    l AS (\n        SELECT\n            *\n        FROM\n            AIRBNB.DEV.dim_listings_cleansed\n    ),\n    h AS (\n        SELECT\n            *\n        FROM\n            AIRBNB.DEV.dim_hosts_cleansed\n    )\nSELECT\n    l.listing_id,\n    l.listing_name,\n    l.room_type,\n    l.minimum_nights,\n    l.price,\n    l.host_id,\n    h.host_name,\n    h.is_superhost AS host_is_superhost,\n    l.created_at,\n    GREATEST(l.updated_at, h.updated_at) AS updated_at\nFROM\n    l\nLEFT JOIN\n    h ON (h.host_id = l.host_id)", "relation_name": "AIRBNB.DEV.dim_listings_w_hosts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.304841Z", "completed_at": "2025-04-07T19:12:45.422117Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.422447Z", "completed_at": "2025-04-07T19:12:45.422454Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11804604530334473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.no_nulls_in_dim_listings", "compiled": true, "compiled_code": "-- Test to ensure there are no null values in any column of dim_listings_cleansed\n\n    SELECT * FROM AIRBNB.DEV.dim_listings_cleansed WHERE\n    LISTING_ID IS NULL OR\n    LISTING_NAME IS NULL OR\n    ROOM_TYPE IS NULL OR\n    MINIMUM_NIGHTS IS NULL OR\n    HOST_ID IS NULL OR\n    PRICE IS NULL OR\n    CREATED_AT IS NULL OR\n    UPDATED_AT IS NULL OR\n    \n    FALSE\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.423892Z", "completed_at": "2025-04-07T19:12:45.433643Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.433922Z", "completed_at": "2025-04-07T19:12:45.433927Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010671138763427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.not_null_dim_listings_cleansed_listing_id.2da437bec9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect listing_id\nfrom AIRBNB.DEV.dim_listings_cleansed\nwhere listing_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.435192Z", "completed_at": "2025-04-07T19:12:45.439760Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.439968Z", "completed_at": "2025-04-07T19:12:45.439972Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0053958892822265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.unique_dim_listings_cleansed_listing_id.930e4e859e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    listing_id as unique_field,\n    count(*) as n_records\n\nfrom AIRBNB.DEV.dim_listings_cleansed\nwhere listing_id is not null\ngroup by listing_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.440950Z", "completed_at": "2025-04-07T19:12:45.443458Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.443698Z", "completed_at": "2025-04-07T19:12:45.443703Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003216981887817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.mart_fullmoon_reviews", "compiled": true, "compiled_code": "\n\nWITH fct_reviews AS (\n    SELECT * FROM AIRBNB.DEV.fct_reviews  -- Selecting all records from the fact reviews table\n),\nfull_moon_dates AS (\n    SELECT * FROM AIRBNB.DEV.seed_full_moon_dates  -- Selecting all records from the full moon dates seed\n)\nSELECT\n    r.*,  -- Selecting all columns from the fact reviews\n    CASE\n        WHEN fm.full_moon_date IS NULL THEN 'not full moon'  -- Checking if the full moon date is null\n        ELSE 'full moon'  -- If not null, indicating it is a full moon\n    END AS is_full_moon  -- Creating a new column to indicate full moon status\nFROM\n    fct_reviews r  -- Using the fact reviews as the main table\nLEFT JOIN\n    full_moon_dates fm  -- Left joining with the full moon dates\nON \n    (TO_DATE(r.review_date) = DATEADD(DAY, 1, fm.full_moon_date))  -- Joining condition to match review dates with full moon dates", "relation_name": "AIRBNB.DEV.mart_fullmoon_reviews", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:12:45.444726Z", "completed_at": "2025-04-07T19:12:45.446785Z"}, {"name": "execute", "started_at": "2025-04-07T19:12:45.446993Z", "completed_at": "2025-04-07T19:12:45.446997Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002721071243286133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.consistent_created_at", "compiled": true, "compiled_code": "-- Test to ensure that no review was submitted before its listing was created\nSELECT\n    r.listing_id,\n    r.review_date,\n    l.created_at as listing_created_at\nFROM AIRBNB.DEV.fct_reviews r\nLEFT JOIN AIRBNB.DEV.dim_listings_cleansed l\n    ON r.listing_id = l.listing_id\nWHERE r.review_date < l.created_at", "relation_name": null, "batch_results": null}], "elapsed_time": 1.0047550201416016, "args": {"require_explicit_package_overrides_for_builtin_materializations": true, "log_file_max_bytes": 10485760, "cache_selected_only": false, "state_modified_compare_more_unrendered_values": false, "which": "generate", "macro_debugging": false, "strict_mode": false, "log_path": "/Users/amanarya/Desktop/DE_Bootcamp/udemy_dbt_course/dbtlearn/logs", "require_resource_names_without_spaces": false, "log_format_file": "debug", "invocation_command": "dbt docs generate", "populate_cache": true, "project_dir": "/Users/amanarya/Desktop/DE_Bootcamp/udemy_dbt_course/dbtlearn", "show_resource_report": false, "compile": true, "indirect_selection": "eager", "partial_parse": true, "profiles_dir": "/Users/amanarya/.dbt", "introspect": true, "require_nested_cumulative_type_params": false, "quiet": false, "log_level_file": "debug", "use_colors": true, "select": [], "state_modified_compare_vars": false, "defer": false, "static_parser": true, "partial_parse_file_diff": true, "exclude": [], "require_batched_execution_for_custom_microbatch_strategy": false, "printer_width": 80, "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "favor_state": false, "log_level": "info", "log_format": "default", "write_json": true, "source_freshness_run_project_hooks": false, "version_check": true, "empty_catalog": false, "vars": {}, "skip_nodes_if_on_run_start_fails": false, "static": false, "require_yaml_configuration_for_mf_time_spines": false, "send_anonymous_usage_stats": true, "print": true}}